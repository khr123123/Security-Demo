-- 题库表
create table if not exists question_bank
(
    id          bigint auto_increment comment 'id' primary key,
    title       varchar(256)                       null comment '标题',
    description text                               null comment '描述',
    picture     varchar(2048)                      null comment '图片',
    userId      bigint                             not null comment '创建用户 id',
    editTime    datetime default CURRENT_TIMESTAMP not null comment '编辑时间',
    createTime  datetime default CURRENT_TIMESTAMP not null comment '创建时间',
    updateTime  datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP comment '更新时间',
    isDelete    tinyint  default 0                 not null comment '是否删除',
    index idx_title (title)
) comment '题库' collate = utf8mb4_unicode_ci;

-- 题目表
create table if not exists question
(
    id         bigint auto_increment comment 'id' primary key,
    title      varchar(256)                       null comment '标题',
    content    text                               null comment '内容',
    tags       varchar(1024)                      null comment '标签列表（json 数组）',
    answer     text                               null comment '推荐答案',
    userId     bigint                             not null comment '创建用户 id',
    editTime   datetime default CURRENT_TIMESTAMP not null comment '编辑时间',
    createTime datetime default CURRENT_TIMESTAMP not null comment '创建时间',
    updateTime datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP comment '更新时间',
    isDelete   tinyint  default 0                 not null comment '是否删除',
    index idx_title (title),
    index idx_userId (userId)
) comment '题目' collate = utf8mb4_unicode_ci;

-- 题库题目表（硬删除）
create table if not exists question_bank_question
(
    id             bigint auto_increment comment 'id' primary key,
    questionBankId bigint                             not null comment '题库 id',
    questionId     bigint                             not null comment '题目 id',
    userId         bigint                             not null comment '创建用户 id',
    createTime     datetime default CURRENT_TIMESTAMP not null comment '创建时间',
    updateTime     datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP comment '更新时间',
    UNIQUE (questionBankId, questionId)
) comment '题库题目' collate = utf8mb4_unicode_ci;

-- 問題集テーブルの初期データ
INSERT INTO question_bank (title, description, picture, userId)
VALUES ('JavaScript 基礎', 'JavaScript の基礎知識に関する問題を含む',
        'https://pic.code-nav.cn/mianshiya/question_bank_picture/1777886594896760834/JldkWf9w_JavaScript.png', 1),
       ('CSS スタイル', 'CSS に関するスタイルの問題を含む',
        'https://pic.code-nav.cn/mianshiya/question_bank_picture/1777886594896760834/QatnFmEN_CSS.png', 2),
       ('HTML 基礎', 'HTML マークアップ言語の基本的な知識',
        'https://www.mianshiya.com/logo.png', 3),
       ('フロントエンドフレームワーク', 'React、Vue、Angular などのフレームワークに関する問題',
        'https://www.mianshiya.com/logo.png', 1),
       ('アルゴリズムとデータ構造', 'データ構造とアルゴリズムの問題',
        'https://www.mianshiya.com/logo.png', 2),
       ('データベース原理', 'SQL 文とデータベース設計に関する問題',
        'https://www.mianshiya.com/logo.png', 3),
       ('オペレーティングシステム', 'OS に関する基本的な概念',
        'https://www.mianshiya.com/logo.png', 1),
       ('ネットワークプロトコル', 'HTTP、TCP/IP などのネットワークプロトコルに関する問題',
        'https://www.mianshiya.com/logo.png', 2),
       ('デザインパターン', 'よく使われるデザインパターンとその応用',
        'https://www.mianshiya.com/logo.png', 3),
       ('プログラミング言語概要', '複数のプログラミング言語の基礎知識',
        'https://www.mianshiya.com/logo.png', 1),
       ('バージョン管理', 'Git や SVN の使い方',
        'https://www.mianshiya.com/logo.png', 2),
       ('セキュリティと暗号化', 'ネットワークセキュリティおよび暗号化技術',
        'https://www.mianshiya.com/logo.png', 3),
       ('クラウドコンピューティング', 'クラウドサービスとアーキテクチャ',
        'https://www.mianshiya.com/logo.png', 1),
       ('マイクロサービスアーキテクチャ', 'マイクロサービスの設計と実装',
        'https://www.mianshiya.com/logo.png', 2),
       ('コンテナ技術', 'Docker や Kubernetes に関する知識',
        'https://www.mianshiya.com/logo.png', 3),
       ('DevOps 実践', 'CI/CD に関する実践的な内容',
        'https://www.mianshiya.com/logo.png', 1),
       ('データ分析', 'データの分析および可視化',
        'https://www.mianshiya.com/logo.png', 2),
       ('人工知能', '機械学習やディープラーニングの基礎',
        'https://www.mianshiya.com/logo.png', 3),
       ('ブロックチェーン技術', 'ブロックチェーンの基本原理と応用',
        'https://www.mianshiya.com/logo.png', 1),
       ('プロジェクト管理', 'ソフトウェア開発プロジェクトの管理と実行',
        'https://www.mianshiya.com/logo.png', 2);

-- 問題テーブルの初期データ
INSERT INTO question (title, content, tags, answer, userId)
VALUES ('JavaScript の変数ホイスティング', 'JavaScript における変数ホイスティング現象を説明してください。', '["JavaScript", "基礎"]',
        '変数ホイスティングとは、JavaScript において変数の宣言がスコープの先頭に持ち上げられる現象です。', 1),
       ('CSS Flexbox レイアウト', 'CSS を使ってボックスを水平方向に中央揃えするには？', '["CSS", "レイアウト"]',
        'Flexbox レイアウトを使用し、親要素に display: flex、justify-content: center を指定します。', 2),
       ('HTML のセマンティクス', 'HTML のセマンティクスとは何か？なぜ重要か？', '["HTML", "セマンティクス"]',
        'HTML セマンティクスとは、内容の意味に合った正しいタグを使うことで、アクセシビリティや SEO を向上させることができます。', 3),
       ('React の状態管理', 'React でコンポーネントの状態を管理する方法は？', '["React", "状態管理"]',
        'useState や useReducer フック、または Redux などを使用して状態を管理します。', 1),
       ('アルゴリズム：二分探索', '二分探索アルゴリズムを実装してください。', '["アルゴリズム", "データ構造"]',
        '二分探索は、ソートされた配列において要素を半分に分けながら探索するアルゴリズムです。', 2),
       ('データベースインデックスの役割', 'データベースインデックスとは？その役割は？', '["データベース", "インデックス"]',
        'インデックスは検索の高速化に使われるデータ構造で、検索パスを最適化することで処理時間を短縮します。', 3),
       ('HTTP と HTTPS の違い', 'HTTP と HTTPS の主な違いを説明してください。', '["ネットワーク", "プロトコル"]',
        'HTTPS は暗号化された HTTP で、SSL/TLS により安全な通信を提供します。', 1),
       ('デザインパターン：シングルトン', 'シングルトンパターンの実装と利用場面を説明してください。', '["デザインパターン", "シングルトン"]',
        'シングルトンパターンは、あるクラスのインスタンスを一つだけに制限し、グローバルなアクセスを提供します。', 2),
       ('Git のブランチ管理', 'Git におけるブランチの管理方法は？', '["バージョン管理", "Git"]',
        'branch でブランチを作成し、checkout で切り替え、merge で統合します。', 3),
       ('Docker の基本コマンド', 'Docker のよく使われるコマンドを列挙して説明してください。', '["コンテナ技術", "Docker"]',
        'docker run、docker build、docker ps、docker stop などがあります。', 1),
       ('フロントエンドのパフォーマンス最適化', 'フロントエンドパフォーマンスを最適化する方法をいくつか挙げてください。', '["フロントエンド", "パフォーマンス最適化"]',
        'コード分割、リソース圧縮、キャッシュ戦略、遅延読み込みなどがあります。', 2),
       ('JavaScript クロージャの応用', 'クロージャとは？その実際の応用例を挙げてください。', '["JavaScript", "上級"]',
        'クロージャは、関数が定義されたスコープを記憶している関数です。データの隠蔽やモジュール化に使用されます。', 3),
       ('データベーストランザクションの特性', 'データベーストランザクションの ACID 特性を説明してください。', '["データベース", "トランザクション"]',
        'ACID は、原子性、一貫性、独立性、永続性を意味し、トランザクションの基本的な性質を表します。', 1),
       ('CSS の BEM 命名規則', 'BEM とは？それを使った命名方法は？', '["CSS", "命名規則"]',
        'BEM は Block、Element、Modifier の略で、CSS の命名を体系化するための規則です。', 2),
       ('JavaScript のプロトタイプチェーン', 'JavaScript におけるプロトタイプチェーンの仕組みを説明してください。', '["JavaScript", "プロトタイプ"]',
        'プロトタイプチェーンは、オブジェクトが他のオブジェクトのプロパティやメソッドを継承する仕組みです。', 3),
       ('React のライフサイクル', 'React コンポーネントのライフサイクルを説明してください。', '["React", "ライフサイクル"]',
        '初期化、更新、アンマウントの 3 段階があり、それぞれに対応するライフサイクルメソッドがあります。', 1),
       ('HTTP ステータスコード 404 と 500 の違い', '404 と 500 の意味の違いを説明してください。', '["ネットワーク", "HTTP"]',
        '404 はリソースが見つからない、500 はサーバー内部のエラーを意味します。', 2),
       ('Python と Java の違い', 'Python と Java の主な違いを比較してください。', '["プログラミング言語", "Python", "Java"]',
        'Python は動的型付けで簡潔、Java は静的型付けで厳格かつ高性能です。', 3),
       ('Vue の双方向データバインディング', 'Vue.js の双方向データバインディングの仕組みを説明してください。', '["Vue", "データバインディング"]',
        'Vue.js はデータの監視と Pub/Sub パターンにより双方向バインディングを実現しています。', 1),
       ('フロントエンドのエンジニアリング化の意義', 'なぜフロントエンドにおいてエンジニアリング化が必要か？', '["フロントエンド", "エンジニアリング"]',
        '開発効率、コード品質、保守性の向上、開発プロセスの標準化などの効果があります。', 2);

-- 問題集と問題の関連付け初期データ
INSERT INTO question_bank_question (questionBankId, questionId, userId)
VALUES (1, 1, 1),
       (1, 2, 1),
       (1, 3, 1),
       (1, 4, 1),
       (1, 5, 1),
       (1, 6, 1),
       (1, 7, 1),
       (1, 8, 1),
       (1, 9, 1),
       (1, 10, 1),
       (2, 2, 2),
       (2, 14, 2),
       (3, 3, 3),
       (3, 13, 3),
       (4, 4, 1),
       (4, 16, 1),
       (5, 5, 2),
       (5, 18, 2),
       (6, 6, 3),
       (6, 19, 3),
       (7, 7, 1),
       (7, 11, 1),
       (8, 8, 2),
       (8, 10, 2),
       (9, 9, 3),
       (9, 17, 3),
       (10, 12, 1),
       (10, 20, 1);
